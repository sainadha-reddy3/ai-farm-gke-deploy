# cloudbuild.yaml ‚Äî build ‚Üí push ‚Üí deploy to GKE

substitutions:
  _REGION: "asia-south1"              # Artifact Registry region
  _AR_REPO: "apps"                    # your Artifact Registry repo
  _IMAGE_NAME: "ai-farm-image"        # Docker image name
  _CLUSTER: "myapp-auto"              # your actual GKE cluster name
  _CLUSTER_LOCATION: "us-central1"    # cluster location (REGIONAL)
  _NAMESPACE: "default"               # Kubernetes namespace
  _DEPLOYMENT: "ai-farm-deployment"   # your Deployment name in GKE
  _CONTAINER: "ai-farm-container"     # container name inside Deployment

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # 1Ô∏è‚É£ Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE_NAME}:$SHORT_SHA",
        ".",
      ]

  # 2Ô∏è‚É£ Push image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE_NAME}:$SHORT_SHA",
      ]

  # 3Ô∏è‚É£ Fetch GKE credentials so kubectl can talk to the cluster
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "üîπ Fetching cluster credentials for ${_CLUSTER} in ${_CLUSTER_LOCATION}"
        gcloud container clusters get-credentials "${_CLUSTER}" \
          --region "${_CLUSTER_LOCATION}" \
          --project "$PROJECT_ID"

  # 4Ô∏è‚É£ Rolling update ‚Äî deploy new image to your GKE app
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      [
        "set",
        "image",
        "deployment/${_DEPLOYMENT}",
        "${_CONTAINER}=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE_NAME}:$SHORT_SHA",
        "-n",
        "${_NAMESPACE}",
      ]

images:
  - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE_NAME}:$SHORT_SHA"
